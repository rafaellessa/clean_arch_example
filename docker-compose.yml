version: "3.7"
services:
  service-clean-arch:
    image: rafaellessa/service-clean-arch:${DOCKER_IMAGE_TAG:-latest}
    volumes:
      - /app/node_modules/
    ports:
      - "${SERVICE_CLEAN_ARCH_PORT:-3000}:${SERVICE_CLEAN_ARCH_PORT:-3000}"
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    environment:
      JWT_SECRET: ${JWT_SECRET}

      # Mongo
      MONGODB_HOST: service-mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}

      #Mysql
      DB_HOST: service-mysql
      DB_PORT: 3306
      DB_USERNAME: ${MYSQL_DB_USERNAME}
      DB_PASSWORD: ${MYSQL_DB_PASSWORD}
      DB_DATABASE: ${MYSQL_DB_DATABASE}

      # Rabbit MQ
      RABBITMQ_HOST: service-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

      # Ambiente do node
      SERVICE_CLEAN_ARCH_ENV: ${SERVICE_CLEAN_ARCH_ENV}
      SERVICE_CLEAN_ARCH_PORT: ${SERVICE_CLEAN_ARCH_PORT}

    networks:
      - service-network
    depends_on:
      - "service-rabbitmq"

    restart: unless-stopped

  service-mongodb:
    #image: mongo:4.2
    image: rafaellessa/service-mongodb:${DOCKER_IMAGE_TAG:-latest}
    volumes:
      - mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}

      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGODB_PASSWORD}
    networks:
      - service-network
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    restart: unless-stopped

  service-mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    networks:
      - service-network
    container_name: service-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_DATABASE}

    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"

    restart: always

  service-redis:
    image: redis
    container_name: service-redis
    networks:
      - service-network

    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"

    restart: always

  # Rabbit MQ
  service-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    # O hostname é definido unicamente pois o RabbitMQ monta a pasta storage
    # utilizando o hostname, então para manter os dados persistentes precisa
    # manter o nome da pasta
    hostname: rabbit
    environment:
      RABBITMQ_NODENAME: iron_service
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - "service-network"
    ports:
      - "5673:5672"
      - "15673:15672"
    restart: unless-stopped

volumes:
  # Mongo DB
  mongodb:
    driver: local

  # Rabbit MQ Storage
  rabbitmq:
    driver: local

networks:
  service-network:
    external: true
